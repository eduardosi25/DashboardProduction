<?php
/**
 * @file
 * Módulo excelsior_topicos para la presentación de tópicos en Drupal 7 con el API de cXense.
 */
define('CX_CONTENT_RELATED_URL', 'https://api.cxense.com/profile/content/related', 1);

// Content
define('CX_SITE_ID', variable_get('excelsior_topicos_cxsiteid', '9222288259132208948'), 1);
define('CX_GROUP_LIST', variable_get('excelsior_topicos_cxgrouplist', 'acronym|person|location|concept|company|entity'), 1);

// Access
define('CX_AUTH_USERNAME', variable_get('excelsior_topicos_cxauthusername','david.gil@gimm.com.mx'), 1);
define('CX_AUTH_SECRET', variable_get('excelsior_topicos_cxauthsecret','api&user&In/f/tfvy2qAPdQgCB2WBQ=='), 1);

// Storage
define('JSON_DATA_DIR', variable_get('excelsior_topicos_jsondatadir','/srv/data/files/json'));

/**
 * Implements hook_preprocess_node.
 *
 * Para incluír los javascripts que se usarán para pintar el nodo.
 */
function excelsior_topicos_preprocess_node(&$vars) {
  if($vars['type'] == 'topico') {
    drupal_add_js( drupal_get_path('module', 'excelsior_cxense') . '/js/cx_search.class.js' );
    drupal_add_js( drupal_get_path('module', 'excelsior_cxense') . '/js/ICanHaz.min.js' );
    drupal_add_css( drupal_get_path('module', 'excelsior_topicos') . '/css/excelsior_topicos_node.css' );
    $vars['excelsior_topicos_vars'] = array(
      'cx_site_id' => CX_SITE_ID,
    );
  }
}

/**
 * Implements hook_form_alter().
 */
function excelsior_topicos_form_alter(&$form, &$form_state, $form_id) {

  if($form_id == 'topic_node_form') {
    if(is_numeric(arg(1))){
      $node = node_load(arg(1));
      $saved_terms = array();
      foreach(field_get_items('node',$node,'field_terminos_relacionados') as $termino){
        $saved_terms[$termino['value']] = preg_replace("/^.*--/", "", $termino['value']);
        $terms_checked[] = $termino['value'];
      }
      $form['field_terminos_relacionados']['#options'] = $saved_terms;
      $form['field_terminos_relacionados']['#default_value'] = $terms_checked;
    }
    $form['#after_build'][] = 'excelsior_topicos_after_build';
    $search_term = (isset($form_state['values']['field_terminos_relacionados_search_textbox'])) ? $form_state['values']['field_terminos_relacionados_search_textbox'] : "";
    
    // Caja búsqueda de términos
    $form['field_terminos_relacionados_search_textbox']['#title'] = 'Búsqueda de término (escribe el término y presiona enter para buscar)';
    $form['field_terminos_relacionados_search_textbox']['#type'] = 'textfield';
    $form['field_terminos_relacionados_search_textbox']['#weight'] = 5;
    $form['field_terminos_relacionados_search_textbox']['#ajax'] = array(
      'event' => 'none',
      'callback' => 'excelsior_topicos_ajax_callback',
      'wrapper' => 'form-terminos-relacionados-populate',
      'method' => 'replace',
      'keypress' => true,
    );

    // Checkboxes 
    $form['field_terminos_relacionados']['#prefix'] = '<div id="form-terminos-relacionados-populate">';
    $form['field_terminos_relacionados']['#suffix'] = '</div>';
    $form['field_terminos_relacionados']['#type'] = 'checkboxes';
    $form['field_terminos_relacionados']['#weight'] = 7;
    
    if($search_term !== ""){
      $form['field_terminos_relacionados']['#options'] = _form_terminos_relacionados_populate($search_term);
    }

  }

  return $form;

}

/**
 * Implements hook_ajax_callback()
 * AJAX callback para recargar los términos relacionados ya populados
 */
function excelsior_topicos_ajax_callback( &$form, &$form_state ){
  return $form['field_terminos_relacionados'];
}

/**
 * Implements hook_node_submit().
 * @see ajax_example_form_node_form_alter()
 */
function excelsior_topicos_node_submit($node, $form, &$form_state) {  
  if(isset($form_state['values']['field_terminos_relacionados'])){
    $i = 0;
    foreach($form_state['values']['field_terminos_relacionados'] as $item){
      if(!is_array($item) && $item !== 0){
        $node->field_terminos_relacionados[LANGUAGE_NONE][$i++]['value'] = $item;
      } 
    }
  } 
}

/**
 * Helper para poblar el terminos_relacionados
 */
function _form_terminos_relacionados_populate($search_term){
  $search_term = (function_exists('mb_strtolower')) ? mb_strtolower(trim($search_term)):strtolower(trim($search_term));
  $cx_auth_date = date('c');
  $cx_auth_signature =  hash_hmac ( 'sha256' , $cx_auth_date , CX_AUTH_SECRET );

  $cx_req = array (
      'siteId' => array_shift(array_values(explode(',',CX_SITE_ID))),
      'start' => -86400,
      'stop' => 0,
      'count' => 20,
      'groups' => explode('|',CX_GROUP_LIST),
      'keywords' => array (
        array (
          'item' => $search_term,
        ),
      ),
    );

  $cx_json_req = json_encode($cx_req);

  $ch = curl_init(CX_CONTENT_RELATED_URL);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POSTFIELDS, $cx_json_req);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
      'Content-Type: application/json',                                                                                
      'Content-Length: ' . strlen($cx_json_req),
      "X-cXense-Authentication: username=" . CX_AUTH_USERNAME . " date={$cx_auth_date} hmac-sha256-hex={$cx_auth_signature}"
    )
  );                                                                                                                   
   
  $result = curl_exec($ch);
  $result_unserialized = json_decode($result);
  $options_array = array();
  foreach($result_unserialized->relatedItems as $row){
    $options_array["kw-" . $row->group . "--" . $row->item] = $row->item;
  }

  return array_unique($options_array);
}

function excelsior_topicos_after_build($form, &$form_state) {
  $path = drupal_get_path('module', 'excelsior_topicos');
  drupal_add_css ("{$path}/css/excelsior_topicos_form.css");
  return $form;
}


function excelsior_topicos_menu() {  
  $items['topicos'] = array(
    'title' => 'Tópicos',
    'page callback' => 'excelsior_topicos_page',
    'access callback' => TRUE
  );

  $items['admin/config/excelsior/topicos'] = array(
    'title' => 'Tópicos',
    'description' => 'Permite cambiar las variables de cxense y almacenamiento que usa el módulo de tópicos.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('excelsior_topicos_admin'),
    'access arguments' => array('administer topicos'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function excelsior_topicos_permission() {
  return array(
    'administer topicos' => array(
      'title' => t('Administer topicos'),
      'description' => t('Configure Module Excélsior - Tópicos.'),
    ),
  );
} 

function excelsior_topicos_page(){
  return theme('excelsior_topicos_page');
}

function _listar_topicos(){
  $topicos = array();
  if(file_exists(JSON_DATA_DIR . '/lista_topicos.json') && json_decode(file_get_contents(JSON_DATA_DIR . '/lista_topicos.json'))){
    $topicos = json_decode(file_get_contents(JSON_DATA_DIR . '/lista_topicos.json'));
  } else {
    $query = db_select('node','n')
      ->condition('n.status','1','=')
      ->condition('n.type','topico','=')
      ->orderBy('title', 'ASC');
    $query->join('url_alias','ua',"ua.source = CONCAT('node/',n.nid)");
    $query->addField('n','title','title');
    $query->addField('ua','alias','url');
    
    $topicos = $query->execute()->fetchAll();

    file_put_contents(JSON_DATA_DIR . '/lista_topicos.json', json_encode($topicos));
  }
  return $topicos;
}

function _transliterate_string($txt) {
    $transliterationTable = array('á' => 'a', 'Á' => 'A', 'à' => 'a', 'À' => 'A', 'ă' => 'a', 'Ă' => 'A', 'â' => 'a', 'Â' => 'A', 'å' => 'a', 'Å' => 'A', 'ã' => 'a', 'Ã' => 'A', 'ą' => 'a', 'Ą' => 'A', 'ā' => 'a', 'Ā' => 'A', 'ä' => 'ae', 'Ä' => 'AE', 'æ' => 'ae', 'Æ' => 'AE', 'ḃ' => 'b', 'Ḃ' => 'B', 'ć' => 'c', 'Ć' => 'C', 'ĉ' => 'c', 'Ĉ' => 'C', 'č' => 'c', 'Č' => 'C', 'ċ' => 'c', 'Ċ' => 'C', 'ç' => 'c', 'Ç' => 'C', 'ď' => 'd', 'Ď' => 'D', 'ḋ' => 'd', 'Ḋ' => 'D', 'đ' => 'd', 'Đ' => 'D', 'ð' => 'dh', 'Ð' => 'Dh', 'é' => 'e', 'É' => 'E', 'è' => 'e', 'È' => 'E', 'ĕ' => 'e', 'Ĕ' => 'E', 'ê' => 'e', 'Ê' => 'E', 'ě' => 'e', 'Ě' => 'E', 'ë' => 'e', 'Ë' => 'E', 'ė' => 'e', 'Ė' => 'E', 'ę' => 'e', 'Ę' => 'E', 'ē' => 'e', 'Ē' => 'E', 'ḟ' => 'f', 'Ḟ' => 'F', 'ƒ' => 'f', 'Ƒ' => 'F', 'ğ' => 'g', 'Ğ' => 'G', 'ĝ' => 'g', 'Ĝ' => 'G', 'ġ' => 'g', 'Ġ' => 'G', 'ģ' => 'g', 'Ģ' => 'G', 'ĥ' => 'h', 'Ĥ' => 'H', 'ħ' => 'h', 'Ħ' => 'H', 'í' => 'i', 'Í' => 'I', 'ì' => 'i', 'Ì' => 'I', 'î' => 'i', 'Î' => 'I', 'ï' => 'i', 'Ï' => 'I', 'ĩ' => 'i', 'Ĩ' => 'I', 'į' => 'i', 'Į' => 'I', 'ī' => 'i', 'Ī' => 'I', 'ĵ' => 'j', 'Ĵ' => 'J', 'ķ' => 'k', 'Ķ' => 'K', 'ĺ' => 'l', 'Ĺ' => 'L', 'ľ' => 'l', 'Ľ' => 'L', 'ļ' => 'l', 'Ļ' => 'L', 'ł' => 'l', 'Ł' => 'L', 'ṁ' => 'm', 'Ṁ' => 'M', 'ń' => 'n', 'Ń' => 'N', 'ň' => 'n', 'Ň' => 'N', 'ñ' => 'n', 'Ñ' => 'N', 'ņ' => 'n', 'Ņ' => 'N', 'ó' => 'o', 'Ó' => 'O', 'ò' => 'o', 'Ò' => 'O', 'ô' => 'o', 'Ô' => 'O', 'ő' => 'o', 'Ő' => 'O', 'õ' => 'o', 'Õ' => 'O', 'ø' => 'oe', 'Ø' => 'OE', 'ō' => 'o', 'Ō' => 'O', 'ơ' => 'o', 'Ơ' => 'O', 'ö' => 'oe', 'Ö' => 'OE', 'ṗ' => 'p', 'Ṗ' => 'P', 'ŕ' => 'r', 'Ŕ' => 'R', 'ř' => 'r', 'Ř' => 'R', 'ŗ' => 'r', 'Ŗ' => 'R', 'ś' => 's', 'Ś' => 'S', 'ŝ' => 's', 'Ŝ' => 'S', 'š' => 's', 'Š' => 'S', 'ṡ' => 's', 'Ṡ' => 'S', 'ş' => 's', 'Ş' => 'S', 'ș' => 's', 'Ș' => 'S', 'ß' => 'SS', 'ť' => 't', 'Ť' => 'T', 'ṫ' => 't', 'Ṫ' => 'T', 'ţ' => 't', 'Ţ' => 'T', 'ț' => 't', 'Ț' => 'T', 'ŧ' => 't', 'Ŧ' => 'T', 'ú' => 'u', 'Ú' => 'U', 'ù' => 'u', 'Ù' => 'U', 'ŭ' => 'u', 'Ŭ' => 'U', 'û' => 'u', 'Û' => 'U', 'ů' => 'u', 'Ů' => 'U', 'ű' => 'u', 'Ű' => 'U', 'ũ' => 'u', 'Ũ' => 'U', 'ų' => 'u', 'Ų' => 'U', 'ū' => 'u', 'Ū' => 'U', 'ư' => 'u', 'Ư' => 'U', 'ü' => 'ue', 'Ü' => 'UE', 'ẃ' => 'w', 'Ẃ' => 'W', 'ẁ' => 'w', 'Ẁ' => 'W', 'ŵ' => 'w', 'Ŵ' => 'W', 'ẅ' => 'w', 'Ẅ' => 'W', 'ý' => 'y', 'Ý' => 'Y', 'ỳ' => 'y', 'Ỳ' => 'Y', 'ŷ' => 'y', 'Ŷ' => 'Y', 'ÿ' => 'y', 'Ÿ' => 'Y', 'ź' => 'z', 'Ź' => 'Z', 'ž' => 'z', 'Ž' => 'Z', 'ż' => 'z', 'Ż' => 'Z', 'þ' => 'th', 'Þ' => 'Th', 'µ' => 'u', 'а' => 'a', 'А' => 'a', 'б' => 'b', 'Б' => 'b', 'в' => 'v', 'В' => 'v', 'г' => 'g', 'Г' => 'g', 'д' => 'd', 'Д' => 'd', 'е' => 'e', 'Е' => 'e', 'ё' => 'e', 'Ё' => 'e', 'ж' => 'zh', 'Ж' => 'zh', 'з' => 'z', 'З' => 'z', 'и' => 'i', 'И' => 'i', 'й' => 'j', 'Й' => 'j', 'к' => 'k', 'К' => 'k', 'л' => 'l', 'Л' => 'l', 'м' => 'm', 'М' => 'm', 'н' => 'n', 'Н' => 'n', 'о' => 'o', 'О' => 'o', 'п' => 'p', 'П' => 'p', 'р' => 'r', 'Р' => 'r', 'с' => 's', 'С' => 's', 'т' => 't', 'Т' => 't', 'у' => 'u', 'У' => 'u', 'ф' => 'f', 'Ф' => 'f', 'х' => 'h', 'Х' => 'h', 'ц' => 'c', 'Ц' => 'c', 'ч' => 'ch', 'Ч' => 'ch', 'ш' => 'sh', 'Ш' => 'sh', 'щ' => 'sch', 'Щ' => 'sch', 'ъ' => '', 'Ъ' => '', 'ы' => 'y', 'Ы' => 'y', 'ь' => '', 'Ь' => '', 'э' => 'e', 'Э' => 'e', 'ю' => 'ju', 'Ю' => 'ju', 'я' => 'ja', 'Я' => 'ja');
    $txt = str_replace(array_keys($transliterationTable), array_values($transliterationTable), $txt);
    return $txt;
}

function excelsior_topicos_node_update($node){
  if($node->type == 'topic')
    unlink(JSON_DATA_DIR . '/lista_topicos.json');
}

function excelsior_topicos_node_insert($node){
  if($node->type == 'topic')
    unlink(JSON_DATA_DIR . '/lista_topicos.json');
}

function excelsior_topicos_node_delete($node){
  if($node->type == 'topic')
    unlink(JSON_DATA_DIR . '/lista_topicos.json');
}

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

function excelsior_topicos_block_info(){
  $blocks = array();
  $blocks[ "excelsior_topicos_bloque" ] = array(
               // The name of the block on the blocks administration page.
   'info' => t( 'Bloque Excelsior Topicos Home' )
   );

  return $blocks;
}

function excelsior_topicos_block_view( $delta = '' ) {
  $block = array(
   'subject' => '',
   'content' => '',
   );
  if ( $delta == "excelsior_topicos_bloque" ) {
   drupal_add_css( drupal_get_path('module', 'excelsior_topicos') . '/css/excelsior_topicos_bloque.css' );         
   $block[ "content" ] = array( '#theme' => 'excelsior_topicos_bloque_home' );
 }
 return $block;
}


function excelsior_topicos_theme($existing, $type, $theme, $path) {
  return array(
      'excelsior_topicos_bloque_home' => array(
        'variables' => array(
          'excelsior_topicos_bloque_home' => NULL,
        ),
        'template' => 'excelsior_topicos_bloque_home',
      ),
      'excelsior_topicos_page' => array(
        'variables' => array(
          'excelsior_topicos_page_lista' => NULL,
        ),
        'template' => 'excelsior_topicos_page',
      ),
  );
}

function template_preprocess_excelsior_topicos_bloque_home( &$variables ) {
  $variables[ 'excelsior_topicos_bloque_home' ] = excelsior_topicos_bloque_home_list();
}

function template_preprocess_excelsior_topicos_page( &$variables ) {
  drupal_add_css( drupal_get_path('module', 'excelsior_topicos') . '/css/excelsior_topicos_page.css' );
  $variables[ 'excelsior_topicos_page_lista' ] = _listar_topicos();
}

function excelsior_topicos_bloque_home_list (){
  $nq = nodequeue_load_queue_by_name('bloque_topicos');
  $sq = nodequeue_load_subqueues_by_queue($nq->qid);
  $sqobject = array_shift($sq);
  $data = nodequeue_load_nodes ( $sqobject->sqid, FALSE, 0, 7, TRUE );
  $return = array ();
  if ( count( $data ) > 0 ){
    foreach ( $data as $node ){
      $return [] = array (
        "nid" => (string)$node-> nid,
        "title" => (string)$node-> title,
        "url" => url( 'node/'.$node-> nid, array( 'absolute'=> true ) )  
      );

    }
  } 
  return ( $return );
}

/*
* Configuración
*/

/**
 * Page callback para la pantalla de administración
 */
function excelsior_topicos_admin() {
  $form = array();

  // Content
  $form['excelsior_topicos_content'] = array(
    '#type' => 'fieldset',
    '#title' => t('Contenido'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  // define('CX_SITE_ID', '9222288259132208948', 1);
  $form['excelsior_topicos_content']['excelsior_topicos_cxsiteid'] = array(
    '#type' => 'textfield',
    '#title' => t('cXense Site Id '),
    '#default_value' => CX_SITE_ID,
    '#size' => 39,
    '#maxlength' => 399,
    '#description' => t("El Id del sitio en cXense. Si es más de uno, separar con comas (Ej. 9222288259132208948,9222288259132208955)."),
    '#required' => TRUE,
  );

  // define('CX_GROUP_LIST', 'acronym|person|location|concept|company|entity', 1);
  $form['excelsior_topicos_content']['excelsior_topicos_cxgrouplist'] = array(
    '#type' => 'textfield',
    '#title' => t('cXense keyword group list'),
    '#default_value' => CX_GROUP_LIST,
    '#size' => 64,
    '#maxlength' => 128,
    '#description' => t("Los grupos de keywords a usar en la búsqueda."),
    '#required' => TRUE,
  );

  // Access
  $form['excelsior_topicos_access'] = array(
    '#type' => 'fieldset',
    '#title' => t('Acceso'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  // define('CX_AUTH_USERNAME', 'david.gil@gimm.com.mx', 1);
  $form['excelsior_topicos_access']['excelsior_topicos_cxauthusername'] = array(
    '#type' => 'textfield',
    '#title' => t('cXense auth username '),
    '#default_value' => CX_AUTH_USERNAME,
    '#size' => 64,
    '#maxlength' => 64,
    '#description' => t("El usuario para autenticar una llamada de analytics en cXense."),
    '#required' => TRUE,
  );

  // define('CX_AUTH_SECRET', 'api&user&In/f/tfvy2qAPdQgCB2WBQ==', 1);
  $form['excelsior_topicos_access']['excelsior_topicos_cxauthsecret'] = array(
    '#type' => 'textfield',
    '#title' => t('cXense API key (auth secret)'),
    '#default_value' => CX_AUTH_SECRET,
    '#size' => 36,
    '#maxlength' => 64,
    '#description' => t("El API key del usuario en cXense analytics."),
    '#required' => TRUE,
  );

  // Storage
  $form['excelsior_topicos_storage'] = array(
    '#type' => 'fieldset',
    '#title' => t('almacenamiento'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  // define('JSON_DATA_DIR', '/srv/data/files/json');
  $form['excelsior_topicos_storage']['excelsior_topicos_jsondatadir'] = array(
    '#type' => 'textfield',
    '#title' => t('Directorio del archivo JSON'),
    '#default_value' => JSON_DATA_DIR,
    '#size' => 128,
    '#maxlength' => 64,
    '#description' => t("La ruta absoluta al directorio donde se almacenará el caché de la página con el listado de tópicos."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_validate().
 */
function excelsior_topicos_admin_validate($form, &$form_state) {
  $cx_site_id = $form_state['values']['excelsior_topicos_cxsiteid'];
  if (!preg_match('/[\d]{19}(,[\d]{19})*$/', $cx_site_id)) {
    form_set_error('excelsior_topicos_cxsiteid', t('El site id debe constar de 19 dígitos. Debe estar separado por comas cuando sea más de uno. IMPORANTE: El primer site id será el usado en la búsqueda al capturar el nodo.'));
  }

  $cx_group_list = $form_state['values']['excelsior_topicos_cxgrouplist'];
  if (!preg_match('/^[a-z\|]+$/i', $cx_group_list)) {
    form_set_error('excelsior_topicos_cxgrouplist', t('La lista de grupos de keywords sólo puede incluír letras y pipes.'));
  }

  $json_data_dir = $form_state['values']['excelsior_topicos_jsondatadir'];
  if (!is_writeable($json_data_dir)) {
    form_set_error('excelsior_topicos_jsondatadir', t('El path del archivo json no existe o no se tienen suficientes permisos para escribir en él.'));
  }
}

/*
 * Instalación
 */

/**
 * Implements hook_install().
 */
function excelsior_topicos_install(){
  // Content
  variable_set('excelsior_topicos_cxsiteid', '9222288259132208948');
  variable_set('excelsior_topicos_cxgrouplist', 'acronym|person|location|concept|company|entity');

  // Access
  variable_set('excelsior_topicos_cxauthusername','david.gil@gimm.com.mx');
  variable_set('excelsior_topicos_cxauthsecret','api&user&In/f/tfvy2qAPdQgCB2WBQ==');

  // Storage
  variable_set('excelsior_topicos_jsondatadir','/srv/data/files/json');
}

/**
 * Implements hook_uninstall().
 */
function excelsior_topicos_uninstall(){
  // Content
  variable_del('excelsior_topicos_cxsiteid');
  variable_del('excelsior_topicos_cxgrouplist');

  // Access
  variable_del('excelsior_topicos_cxauthusername');
  variable_del('excelsior_topicos_cxauthsecret');

  // Storage
  variable_del('excelsior_topicos_jsondatadir');
}