<?php
/**
 * Implements hook_permisson().
 */
function medula_permission() {
  $permissions['administer medula settings'] = array(
    'title' => t('Administer medula settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
function medula_help($path, $arg) {
  if ($path == 'admin/help#medula') {
    return t('Módulo para configuración de medula');
  }
}
/**
 * Implements hook_menu().
 */
function medula_menu() {
  $items=array();
  $items['admin/config/system/medula'] = array(
    'title'            => t('Medula settings'),
    'description'      => t('Configure settings for medula'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('medula_admin_settings_form'),
    'access arguments' => array('administer medula settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'medula.admin.inc',
  );
  return $items;
}

function medula_block_info() {
  return array(
    'medula_home_block' => array(
      'info'  => t('Medula Home Block'),
      'cache'  => DRUPAL_CACHE_PER_PAGE,
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => "<front>",
    ),
    'medula_taxonomy_block' => array(
      'info'  => t('Medula Taxonomy Block'),
      'cache'  => DRUPAL_CACHE_PER_PAGE,
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => "taxonomy/term/*",
    ),
    'medula_node_block' => array(
      'info'  => t('Medula Node Block'),
      'cache'  => DRUPAL_CACHE_PER_PAGE,
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => "node/*",
    ),
  );
}
/**
 * Implements hook_block_view().
 */
function medula_block_view($delta = '') {
  switch ($delta) {
    /*Content Left*/
    case 'medula_home_block':
      $block = array(
        'content' => _medula_block('home'),
      );
    break;
    case 'medula_taxonomy_block':
      $block = array(
        'content' => _medula_block('taxonomy'),
      );
    break;
    case 'medula_node_block':
      $block = array(
        'content' => _medula_block('node'),
      );
    break;
  }
  return $block;
}


function _medula_block($place){
  $html=null;
  $statusmedula=variable_get('medula_status',FALSE);
  if($statusmedula){
    drupal_add_css(drupal_get_path('module', 'medula').'/medula.css');
    $html='<div id="medula"><div id="os_dmp_embed"></div></div>';
    if(drupal_is_front_page()){
      _medula_get_js();
    }else{
      _medula_get_js($place);
    }
  }
  return $html; 
}

function _medula_get_js($place){
  $statusmedula=variable_get('medula_status',FALSE);
  $debug=variable_get('medula_debug',FALSE);
  if($statusmedula){
    $medula_sitename=variable_get('medula_sitename','');
    $tagName='tag';
    if($debug){
      $tagName='test-tag';
    }
    if(drupal_is_front_page()){
      $urlTagJS='geofilter.medula.net/'.$medula_sitename.'/'.$tagName.'.js';
    }else{
      $medula_seccionname=variable_get('medula_seccionname','');
      $urlTagJS='geofilter.medula.net/'.$medula_sitename.'/'.$medula_seccionname.'/'.$tagName.'.js';    
    }
    $footerJS='
    (function(d, t) {
      var s = d.createElement(t);
      s.src = ("https:" == d.location.protocol ? "https://" : "http://") + "'.$urlTagJS.'";
      s.onload = s.onreadystatechange = function() {
        var rs = this.readyState;
        if (rs) if (rs != "complete") if (rs != "loaded") {return;}
        try {
          loadModule();
        } catch (e) {}
      };
      var scr = d.getElementsByTagName(t)[0], par = scr.parentNode;
      par.insertBefore(s, scr);
    })
    (document, "script");';
    drupal_add_js($footerJS, array('type' => 'inline', 'scope' => 'footer'));
  }
}

//Load template files from this module path
/**
 * Implements hook_theme_registry_alter()
**/
function medula_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'medula').'/templates';
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'pow', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    _medula_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
}
/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
*/
function _medula_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}
