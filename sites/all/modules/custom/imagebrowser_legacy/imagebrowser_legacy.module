<?php
/**
 * Implements hook_permisson().
 */
function imagebrowser_legacy_permission() {
  $permissions['administer imagebrowser_legacy settings'] = array(
    'title' => t('Administer Imagebrowser Legacy Settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
function imagebrowser_legacy_help($path, $arg) {
  if ($path == 'admin/help#imagebrowser_legacy') {
    return t('Módulo para configuración de Imagebrowser Legacy');
  }
}
/**
 * Implements hook_menu().
 */
function imagebrowser_legacy_menu() {
  $items=array();
  
  $items['admin/config/system/imagebrowser_legacy'] = array(
    'title'            => t('Imagebrowser Legacy Settings'),
    'description'      => t('Configure settings for Imagebrowser Legacy'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('imagebrowser_legacy_admin_settings_form'),
    'access arguments' => array('administer imagebrowser_legacy settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'imagebrowser_legacy.admin.inc',
  );
  $items['imagebrowser/view/imagecache/%'] = array(
    'page callback'    => 'get_imagebrowser',
    'access callback'  => TRUE,
    'type'             => MENU_NORMAL_ITEM,
  );
  return $items;
}

function get_imagebrowser(){
  $node=arg(3)*1;
  if(!isset($node) || empty($node)){
    drupal_goto();
  }
  //SearchCache
  $data=_search_cache('imagebrowser');
  //File doesn't exists, create it!
  if(!$data){
    $query="select nid, filename, filemime from imagebrowser";
    $result=db_query($query);
    $data=array();
    foreach($result as $row){
      $data[][$row->nid]=array(
        'filename' => $row->filename,
        'filemime' => $row->filemime,
      );
    }
    _create_cache('imagebrowser',$data);
  }
  $file=NULL;
  foreach($data as $item){
    foreach($item as $key => $value){
      if($key==$node){
        $file=$value;
        break;
      }
    }
    if(count($file)>0){
      break;
    }
  }
  if(!isset($file) || empty($file)){
    drupal_goto();
    exit();
  }

  $seconds_to_cache = 2592000; // 1 mes
  $ts = gmdate("D, d M Y H:i:s", time() + $seconds_to_cache) . " GMT";
  header("Expires: $ts");
  header("Pragma: cache");
  header("Cache-Control: public max-age={$seconds_to_cache}");
  header('Content-Type: '.$file['filemime']);
  
  $filename=imagebrowser_legacy_get_path().$file['filename'];
  $contents=file_get_contents($filename);
  echo $contents;
  exit;
}

function imagebrowser_legacy_get_path(){
  return DRUPAL_ROOT.'/'.variable_get('file_public_path','').'/images/browser/';
}
