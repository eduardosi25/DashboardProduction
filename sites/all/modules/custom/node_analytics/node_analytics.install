<?php
/**
 * @file
 * Installation file for Google Analytics module.
 */

/**
 * Implements hook_install().
 */
function node_analytics_install() {
  //Enabled or disabed crawling analytics for nodes
  variable_set('node_analytics_status',FALSE);
  //Enabled or disabed debug mode
  variable_set('node_analytics_debug',FALSE);
  //Constant Values
  $constants=array(
    'secret'   => 'notasecret',
    'script'   => 'cron.standalone.php',
    'mode'     => 'offline_access',
    'redirect' => 'http://'.$_SERVER['HTTP_HOST'].'/oauth2callback',
  );
  variable_set('node_analytics_constants',$constants);
  //Default values
  $gaApi=array(
    'APP_NAME     ' => 'Node Analytics - Inventmx',
    'CLIENT_ID    ' => '768389817374-brv4emp5b3dehs0k2tn7ltdb20d5es71.apps.googleusercontent.com',
    'CLIENT_EMAIL ' => '768389817374-brv4emp5b3dehs0k2tn7ltdb20d5es71@developer.gserviceaccount.com',
    'PUBLIC_KEY   ' => 'ba902fccb95e1e4dee1ebabdcd8eb48faefc7688',
    'API_KEY      ' => 'AIzaSyCJUNiSCQ0JG2ageSG5P6wq3aOigcitZU8',
    'KEY_FILE     ' => 'private.file.location.p12',
    'GA_SCOPE_FULL' => 'https://www.googleapis.com/auth/analytics',
    'GA_SCOPE_READ' => 'https://www.googleapis.com/auth/analytics.readonly',
  );
  variable_set('node_analytics_api',$gaApi);
  //Settings defaults for querys
  $settings=array(
    'ids'         => 'ga:54331725',
    'metrics'     => 'ga:sessions,ga:pageviews,ga:uniquePageviews,ga:timeOnPage,ga:sessionDuration,ga:exits,ga:avgSessionDuration,ga:pageviewsPerSession,ga:avgTimeOnPage',
    'dimensions'  => 'ga:pagePath',
    'max-results' => 100,
  );
  variable_set('node_analytics_settings',$settings);
}

/**
 * Implements hook_uninstall().
 */
function node_analytics_uninstall() {
  #Delete all variables
  variable_del('node_analytics_status');
  variable_del('node_analytics_debug');
  variable_del('node_analytics_api');
  variable_del('node_analytics_settings');
  variable_del('node_analytics_constants');
  if (db_table_exists('node_analytics')) {
    db_drop_table('node_analytics');
  }
  if (db_table_exists('node_analytics_processed')) {
    db_drop_table('node_analytics_processed');
  }
}

function node_analytics_schema(){
  $schema=array();
  //Primary table
  $schema['node_analytics'] = array(
    'fields' => array(
      'naid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The primary identifier for a node_analytics record',
      ),
      'nid' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Node ID',
      ),
      'sessions' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Sessions[ga:sessions]',
      ),
      'pageviews' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Pageviews[ga:pageviews]',
      ),
      'uniquePageviews' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unique pageviews[ga:uniquePageviews]',
      ),
      'sessionDuration' => array(
        'type' => 'float',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Session duration[ga:sessionDuration]',
      ),
      'timeOnPage' => array(
        'type' => 'float',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Time on page[ga:timeOnPage]',
      ),
      'exits' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Exits[ga:exits]',
      ),
      'avgSessionDuration' => array(
        'type' => 'float',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Average Session Duration[ga:avgSessionDuration] - Calculating: ga:sessionDuration / ga:sessions',
      ),
      'pageviewsPerSession' => array(
        'type' => 'float',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Pageviews per session[ga:pageviewsPerSession] - Calculating: ga:pageviews / ga:sessions',
      ),
      'avgTimeOnPage' => array(
        'type' => 'float',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Average time on page[ga:avgTimeOnPage] - Calculatin: ga:timeOnPage / (ga:pageviews - ga:exits)',
      ),
      'status' => array(
        'type' => 'int',
        'length' => 2,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Node status',
      ),
      'created' => array(
        'type' => 'int',
        'length' => 11,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp of created record',
      ),
      'changed' => array(
        'type' => 'int',
        'length' => 11,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp of last changed record',
      ),
      'history' => array(
        'type' => 'int',
        'length' => 4,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Month/Year data for history records: Ex. 20141 (Enero2014) - 201412 (December 2014)',
      ),
    ),
    'primary key' => array('naid'),
    'indexes' => array(
      'node_analytics_nid' => array('naid','nid'),
      'node_analytics_pageviews' => array('naid','nid','pageviews'),
      'node_analytics_sessions' => array('naid','nid','sessions'),
      'node_analytics_created' => array('naid','nid','created'),
      'node_analytics_changed' => array('naid','nid','changed'),
    ),
  );

  $schema['node_analytics_processed'] = array(
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The primary identifier for a node. Populate on node_save when publish=1',
      ),
      'processed' => array(
        'type' => 'int',
        'length' => 2,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Control flag for process node',
      ),
      'changed' => array(
        'type' => 'int',
        'length' => 11,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Last timestamp for process record when processed = true',
      ),
    ),
    'indexes' => array(
      'node_analytics_processed_nid' => array('nid'),
      'node_analytics_processed_processed' => array('nid','processed'),
      'node_analytics_processed_changed' => array('nid','changed'),
    ),
  );

  return $schema;
}
