<?php
global $sipi_variables;
$sipi_variables=sipi_get_variables();

/**
 * Implements hook_permission().
 */
function sipi_permission() {
  #Global permission for use SIPI
  $permissions['use sipi'] = array(
    'title' => t('Use SIPI.'),
    'restrict access' => TRUE,
  );
  #Permissions for BackOffice SIPI
  $permissions['sipi admin clients'] = array(
    'title' => t('Administer SIPI Users.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin plans'] = array(
    'title' => t('Administer Plans on SIPI.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats clients'] = array(
    'title' => t('Access to Client Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats executive'] = array(
    'title' => t('Access to Executives Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats salesforce'] = array(
    'title' => t('Access to SalesForce Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats manager'] = array(
    'title' => t('Access to Manager Reporting Stats.'),
    'restrict access' => TRUE,
  );
  #Other permission for other widgets or modules
  $permissions['use sipi dashboard'] = array(
    'title' => t('Use SIPI Dashboard.'),
    'restrict access' => TRUE,
  );
  $permissions['use sipi reporting'] = array(
    'title' => t('Use SIPI Reporting.'),
    'restrict access' => TRUE,
  );
  $permissions['use sipi expires'] = array(
    'title' => t('Use SIPI Expires.'),
    'restrict access' => TRUE,
  );
  $permissions['run sipi updates'] = array(
    'title' => t('Run SIPI Updates.'),
    'restrict access' => TRUE,
  );
  $permissions['administer sipi settings'] = array(
    'title' => t('Administer SIPI settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
/**
 * Implements hook_help().
 */
function sipi_help($path, $arg) {
  if ($path == 'admin/help#sipi') {
    return t('invent.SIPI - MÃ³dulo para configuraciÃ³n, uso y reporteo de usuarios y contenidos SIPI.');
  }
}
/**
 * Implements hook_menu().
 */
function sipi_menu() {
  $items=array();
  #SIPI MAIN MENU
  $items['sipi'] = array(
    'title'            => 'SIPI',
    'description'      => 'Sistema Integral de PublicaciÃ³n en Internet',
    'page callback'    => 'sipi_login',
    'access callback'  => TRUE,
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #SIPI DASHBOARD
  $items['sipi/dashboard'] = array(
    'title'            => 'Panel de control',
    'page callback'    => 'sipi_dashboard',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('use sipi dashboard'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #SIPI USER == CLIENT
  $items['sipi/client'] = array(
    'title'            => 'Clientes',
    'page callback'    => 'sipi_client',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/add'] = array(
    'title'            => 'Agregar cliente',
    'page callback'    => 'sipi_client_add',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/%sipi_client/edit'] = array(
    'title'            => 'Editar cliente',
    'page callback'    => 'sipi_client_edit',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/%sipi_client/cancel'] = array(
    'title'            => 'Cancelar cuenta del cliente',
    'page callback'    => 'sipi_client_cancel',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/%sipi_client/view'] = array(
    'title'            => 'Detalle del cliente',
    'page callback'    => 'sipi_client_view',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  #SIPI PLANS == PACKAGES
  $items['sipi/plans'] = array(
    'title'            => 'Planes',
    'page callback'    => 'sipi_plans',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/add'] = array(
    'title'            => 'Agregar un plan',
    'page callback'    => 'sipi_plans_add',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/edit'] = array(
    'title'            => 'Editar plan',
    'page callback'    => 'sipi_plans_edit',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/delete'] = array(
    'title'            => 'Eliminar plan',
    'page callback'    => 'sipi_plans_delete',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/view'] = array(
    'title'            => 'Detalle del plan',
    'page callback'    => 'sipi_plans_view',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  #SIPI EXPIRES
  $items['sipi/expire/%expire'] = array(
    'title'            => 'Pr&oacute;ximas finalizaciones',
    'page callback'    => 'sipi_next_expires',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('use sipi expires'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #ADMINISTER SIPI SETTINGS - WEBMASTER ONLY
  $items['admin/config/system/sipi'] = array(
    'title'            => t('SIPI Settings'),
    'description'      => t('Configure settings for invent.SIPI'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('sipi_admin_settings_form'),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'sipi.admin.inc',
  );
  #SIPI ADMIN
  $items['admin/config/system/sipi/default'] = array(
    'title'            => t('SIPI Settings'),
    'description'      => t('Configure settings for invent.SIPI'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('sipi_admin_settings_form'),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'file'             => 'sipi.admin.inc',
    'weight'           => 0,
  );
  $items['admin/config/system/sipi/menu-sipi'] = array(
    'title'            => t('Create SIPI menu'),
    'description'      => t('Create SIPI menu'),
    'page callback'    => '_create_sipi_menu',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_LOCAL_TASK,
    'file'             => 'sipi.admin.inc',
    'weight'           => 1,
  );
  $items['admin/config/system/sipi/cronlt'] = array(
    'title'            => t('Light weight cron handler SIPI Analytics'),
    'description'      => t('A light weight cron handler to allow more frequent runs of SIPI cron system'),
    'page callback'    => 'sipi_run_cronlt',
    'access arguments' => array('administer node_analytics settings'),
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  $items['admin/config/system/sipi/testmail'] = array(
    'page callback'    => 'sipi_mail_test',
    'access arguments' => array('administer users'),
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );

  return $items;
}
/**
 * Menu access callback.
 *
 * @param $action
 *   The action to be performed. Possible values are:
 *   - import
 *   - clear
 *   - unlock
 * @param $param
 *   Node object or FeedsImporter id.
 */
function sipi_access($permission) {
  // Check for permissions
  if ($permission && user_access($permission)) {
    return TRUE;
  }
  return FALSE;
}
/**+
 * Implements hook_init().
 */
function sipi_init(){
  if(arg(0)=='sipi')
    drupal_add_css(drupal_get_path('module','sipi').'/sipi.css');
}
/**
 * Implements hook_block_info().
 */
function sipi_block_info() {
  return array(
    'sipi_client_login' => array(
      'info'       => t('SIPI - Show User Logged'),
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages'      => "sipi\nsipi/*",
    ),
    'sipi_client_detail' => array(
      'info'       => t('SIPI - Detail for Client'),
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages'      => "sipi\nsipi/*",
    ),
    'sipi_client_contents_list' => array(
      'info'       => t('SIPI - Contents List'),
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages'      => "sipi\nsipi/*",
    )
  );
}
/**
 * Implements hook_block_view().
 */
function sipi_block_view($delta) {
  global $user;
  if($user->uid<=0)
    return false;

  switch ($delta) {
    case 'sipi_client_login' :
      $title = t('Show logged user');
      $content = array(
        '#data' => $user,
        '#theme' => 'sipi_client_login',
      );
    break;
    case 'sipi_client_detail':
      $client=sipi_client_load(arg(2));
      $title = t('Show logged user');
      $content = array(
        '#data' => $client,
        '#theme' => 'sipi_client_detail',
      );
    break;
    case 'sipi_client_contents_list':
      $client=sipi_client_load(arg(2));
      $contents=sipi_client_contents_list($client->cid);
      $title = t('Show client contents');
      $content = array(
        '#data' => $contents,
        '#theme' => 'sipi_client_contents_list',
      );
    break;
  }
  return array(
    'subject' => $title,
    'content' => $content,
  );
}
/**
 * Implements hook_theme
 */
function sipi_theme() {
  return array(
    'sipi_client_login' => array(
      'variables' => array(
        'data' => NULL,
        'title' => NULL,
      ),
      'template' => 'templates/sipi_client_login',
    ),
    'sipi_client_detail' => array(
      'variables' => array(
        'data' => NULL,
        'title' => NULL,
      ),
      'template' => 'templates/sipi_client_detail',
    ),
  );
}
/**
 * Returns variables for sipi implementation
 * @return array
 */
function sipi_client_load($sipi_client){
  $query = db_select('sipi_clients', 'c');
  $query->fields('c', array('cid','name','pass','mail','company','cellphone','phone','extention','web','logo','description'));
  $query->fields('c', array('facebook','twitter','googleplus','youtube','instagram','linkedin','pinterest','vine','created','changed','access','login'));
  $query->condition('c.cid', $sipi_client, '=');
  $result = $query->execute();
  if($result){
    //Set object
    foreach($result as $row){
      $sipi_client = $row;
    }
    //Get plans
    sipi_client_build_plans_client($sipi_client);
    return $sipi_client;
  }
  return null;
}
/**
 * Build plans for one client with CID
 * @param $sipi_client
 */
function sipi_client_build_plans_client(&$sipi_client){
  $query = db_select('sipi_plans_clients','pc');
  $query->join('sipi_plans','p','p.pid=pc.pid');
  $query->join('users','u','u.uid=pc.uid');
  $query->fields('pc',array('mid','status','site','start_date','end_date'));
  $query->fields('p',array('pid','name','contents','posts','duration','price'));
  $query->fields('u',array('uid','name','mail'));
  $query->condition('pc.cid', $sipi_client->cid, '=');
  $result = $query->execute();
  if($result){
    foreach($result as $row){
      $sipi_client->plans[] = $row;
    }
  }
}
/**
 * @param $plan
 * @return null
 */
function sipi_plan_load($plan){
  $query = db_select('sipi_plans', 'p');
  $query->fields('p', array('pid','name','contents','posts','duration','price'));
  $query->condition('p.pid', $plan, '=');
  $result = $query->execute()->fetchAssoc();
  if($result){
    return $result;
  }
  return NULL;
}
/**
 * Set logs
 * @param string $message
 * @param string $type
 */
function sipi_logging($message='Done',$type='info'){
  global $sipi_variables;
  if($sipi_variables['debug']){
    switch($type){
      case 'info':
        $type=WATCHDOG_INFO;
        break;
      case 'error':
        $type=WATCHDOG_ERROR;
        break;
      case 'notice':
        $type=WATCHDOG_NOTICE;
        break;
      case 'warning':
        $type=WATCHDOG_WARNING;
        break;
    }
    watchdog('sipi', $message, array(), $type);
  }
}
/**
 * Returns variables for sipi implementation
 * @return array
 */
function sipi_get_variables() {
  $variables = &drupal_static(__FUNCTION__);
  if (!isset($variables)) {
    $settings=variable_get('sipi_settings',NULL);
    $variables=array(
      'status'   => variable_get('sipi_status',FALSE),
      'debug'    => isset($settings['debug']) && !empty($settings['debug']) ? $settings['debug'] : FALSE,
      'protocol' => isset($settings['protocol']) && !empty($settings['protocol']) ? $settings['protocol'] : 'http',
      'domain'   => isset($settings['domain']) && !empty($settings['domain']) ? $settings['domain'] : 'api.inventmx.com',
      'version'  => isset($settings['version']) && !empty($settings['version']) ? $settings['version'] : 'v1',
      'sites'    => isset($settings['sites']) && !empty($settings['sites']) ? $settings['sites'] : NULL,
      'users'    => isset($settings['users']) && !empty($settings['users']) ? $settings['users'] : NULL,
      'contents' => isset($settings['contents']) && !empty($settings['contents']) ? $settings['contents'] : NULL,
      'format'   => isset($settings['format']) && !empty($settings['format']) ? $settings['format'] : 'json',
      'token'    => isset($settings['token']) && !empty($settings['token']) ? $settings['token'] : NULL,
    );
  }
  if (!$variables['token']) {
    sipi_logging('Missing API token access','warning');
  }
  return $variables;
}

function sipi_run_cronlt(){
  global $sipi_variables;
  if($sipi_variables['debug']){
    $dataApi=sipi_get_api_data_for_query();
    if(count($dataApi)>0){
      foreach($dataApi as $client){
        if(count($client['plans'])>0){
          foreach($client['plans'] as $plan){
            //Search by name
            $query=array(
              'limit'  => 1,
              'name'   => $client['name'],
              'sort'   => 'created:DESC',
            );

            $fields=sipi_get_api_users($plan['apirepo'],$query);
            $result=sipi_insert_clients_invent_users($fields);
            if($result){
              $apiRequest=get_api_url_request($plan['apirepo'], 'users', $query);
              echo '<p>Usuarios agregados | Url ['.$apiRequest.']</p>';
            }
            //Search contents for every users
            $query=array(
              'limit'  => 1,
              'name'   => $client['name'],
              'fields' => 'id|name|nodes',
              'sort'   => 'created:DESC',
            );
            $fields=sipi_get_api_contents($plan['apirepo'],$query);
            $result=sipi_insert_clients_invent_contents($fields);
            if($result){
              $apiRequest=get_api_url_request($plan['apirepo'], 'contents', $query);
              echo '<p>Contenidos agregados | Url ['.$apiRequest.']</p>';
            }
          }
        }
      }
    }
    return 'Done!';
  }else{
    return 'Debug mode not enabled. Nothing to do!';
  }
}

function sipi_get_api_data_for_query(){
  //Search clients
  module_load_include('inc','sipi','inc/sipi.client');
  $items=array();
  $clients=sipi_client_list_items();
  if(count($clients)>0){
    $items=array();
    $index=0;
    foreach($clients as $client){
      $items[$index]=array(
        'cid'  => $client->cid,
        'name' => $client->name,
        'mail' => $client->mail,
        'pass' => $client->pass,
      );
      //Search plans/sites for every client
      $plans=sipi_client_list_plans_items($client->cid);
      if(count($plans)>0){
        foreach($plans as $plan){
          $items[$index]['plans'][]=array(
            'idsite'  => $plan->idsite,
            'site'    => $plan->site,
            'apirepo' => $plan->apirepo,
          );
        }
      }
      $index++;
    }
  }
  return $items;
}


function sipi_new_api_users(){
  $result=null;
  //Search for new users
  $siteName='actitudfem';
  $query=array(
    'limit'  => 50,
    'fields' => 'id|name|mail',
    'sort'   => 'created:DESC',
  );
  $fields=sipi_get_api_users($siteName,$query);
  $result=sipi_insert_clients_invent_users($fields);
  echo 'Done search new users - Processed: '.count($result);

  //Search for new contents
  $query=array(
    'limit'  => 50,
    'fields' => 'id|name|nodes',
    'sort'   => 'created:DESC',
  );
  $fields=sipi_get_api_contents($siteName,$query);
  $result=sipi_insert_clients_invent_contents($fields);
  echo 'Search for new contents - Processed: '.count($result);

  return true;
}

//########################################################################################################################################
//########################################################################################################################################
//########################################################################################################################################
function sipi_insert_clients_invent_users($fields){
  if(!isset($fields) || empty($fields) || count($fields)<=0)
    return false;
  $found=sipi_search_clients_invent_users_by_id($fields['cid'],$fields['uid'],$fields['sitename']);
  if($found) {
    return false;
  }else{
    $query=db_insert('sipi_clients_invent_users')->fields($fields)->execute();
    drupal_set_message('User from Invent Network Added | Name: '.$fields['name'].' - Site: '.$fields['sitename'].'.','status');
    sipi_logging('Insert new invent-client Name: ['.$fields['name'].'] from ['.$fields['sitename'].']','info');
    return $query;
  }
}
function sipi_get_api_users($siteName='excelsior', $query=array()){
  print_r(__FUNCTION__);
  print_r($siteName);
  $apiRequest=get_api_url_request($siteName, 'users', $query);
  print_r($apiRequest);
  $result=_do_api_request($apiRequest);
  if($result){
    $result=json_decode($result);
    if($result->response->status=='200' && count($result->data)>0){
      return sipi_process_users_result($result->data);
    }
  }
  return FALSE;
}
function sipi_process_users_result($data){
  if(!isset($data) || empty($data)){
    return null;
  }
  foreach($data as $item){
    $client=array(
      'cid'             => sipi_search_client_by_email($item->mail),
      'uid'             => $item->id,
      'name'            => $item->name,
      'mail'            => $item->mail,
      'created'         => $item->created,
      'changed'         => $item->changed,
      'access'          => $item->user_access,
      'login'           => $item->user_login,
      'sitename'        => $item->attribution,
      'pageviews'       => isset($item->pageviews[0]->total) && !empty($item->pageviews[0]->total) ? $item->pageviews[0]->total : 0,
      'nodes_published' => isset($item->nodes_published[0]->total) && !empty($item->nodes_published[0]->total) ? $item->nodes_published[0]->total : 0,
      'last_published'  => isset($item->last_published[0]->timestamp) && !empty($item->last_published[0]->timestamp) ? $item->last_published[0]->timestamp : 0,
      'publish_date'    => strtotime($item->publish_date),
      'last_update'     => strtotime($item->last_update),
    );
  }

  return $client;
}
function sipi_search_client_by_email($email){
  $id=0;
  $query="select cid from sipi_clients where mail='$email'";
  $result=db_query($query);
  if($result){
    foreach($result as $row){
      $id=$row->cid;
    }
  }
  return $id;
}
function sipi_search_clients_invent_users_by_id($cid,$uid,$sitename){
  $id=false;
  $query="SELECT cid FROM sipi_clients_invent_users WHERE cid='$cid' AND uid='$uid' AND sitename='$sitename'";
  $result=db_query($query);
  if($result){
    foreach($result as $row){
      $id=intval($row->cid);
    }
  }
  return $id;
}
function sipi_search_clients_invent_users_by_uid($uid){
  $id=false;
  $query="select cid from sipi_clients_invent_users where uid='$uid'";
  $result=db_query($query);
  if($result){
    foreach($result as $row){
      $id=intval($row->cid);
    }
  }
  return $id;
}
//########################################################################################################################################
//########################################################################################################################################
//########################################################################################################################################
function sipi_insert_clients_invent_contents($fields){
  if(!isset($fields) || empty($fields) || count($fields)<=0)
    return false;

  foreach($fields['nodes'] as $node){
    $node['cid']=$fields['cid'];
    $node['uid']=$fields['uid'];
    $found=sipi_search_clients_invent_contents_by_iid($node['nid']);
    if(!$found){
      //Insert
      $query=db_insert('sipi_clients_invent_contents')->fields($node)->execute();
      drupal_set_message('Content from Invent Network Added | Title: '.$node['title'].' - NID: '.$node['nid'].'.','status');
      sipi_logging('Insert new invent-client-content Ttitle: ['.$node['title'].'] from ['.$node['nid'].']','info');
    }else if($found>0){
      //Update
      $query=db_update('sipi_clients_invent_contents');
      $query->fields($node);
      $query->condition('iid',$found,'=');
      $query->execute();
      drupal_set_message('Content from Invent Network Updated | Title: '.$node['title'].' - NID: '.$node['nid'].'.','status');
      sipi_logging('Update invent-client-content Ttitle: ['.$node['title'].'] from ['.$node['nid'].']','info');
    }
  }
}
function sipi_get_api_contents($siteName='excelsior', $query=array()){
  $apiRequest=get_api_url_request($siteName, 'contents', $query);
  $result=_do_api_request($apiRequest);
  if($result){
    $result=json_decode($result);
    if($result->response->status=='200'){
      $result=sipi_process_contents_result($result->data);
    }else{
      $result=array();
    }
  }else{
    $result=array();
  }
  return $result;
}
function sipi_process_contents_result($data){
  if(!isset($data) || empty($data)){
    return null;
  }
  if(count($data)<1){
    return null;
  }
  $fields=array();
  foreach($data as $item){
    $fields['cid']=sipi_search_clients_invent_users_by_uid($item->id);
    $fields['uid']=$item->id;
    foreach($item->nodes as $node){
      $fields['nodes'][]=array(
        'nid'             => $node->id,
        'title'           => $node->title,
        'type'            => $node->type,
        'path'            => $node->path,
        'pageviews'       => isset($node->analytics->pageviews) && !empty($node->analytics->pageviews) ? $node->analytics->pageviews : 0,
        'uniquePageviews' => isset($node->analytics->uniquePageviews) && !empty($node->analytics->uniquePageviews) ?  $node->analytics->uniquePageviews : 0,
        'sessionDuration' => isset($node->analytics->sessionDuration) && !empty($node->analytics->sessionDuration) ? $node->analytics->sessionDuration : 0,
        'avgSessionDuration' => isset($node->analytics->avgSessionDuration) && !empty($node->analytics->avgSessionDuration) ? $node->analytics->avgSessionDuration : 0,
        'pageviewsPerSession' => isset($node->analytics->pageviewsPerSession) && !empty($node->analytics->pageviewsPerSession) ? $node->analytics->pageviewsPerSession : 0,
        'avgTimeOnPage'   => isset($node->analytics->avgTimeOnPage) && !empty($node->analytics->avgTimeOnPage) ? $node->analytics->avgTimeOnPage : 0,
        'fbshares'        => isset($node->analytics->fbshares) && !empty($node->analytics->fbshares) ? $node->analytics->fbshares : 0,
        'tweets'          => isset($node->analytics->tweets) && !empty($node->analytics->tweets) ? $node->analytics->tweets : 0,
        'gpshares'        => isset($node->analytics->gpshares) && !empty($node->analytics->gpshares) ? $node->analytics->gpshares : 0,
        'created'         => isset($node->analytics->created) && !empty($node->analytics->created) ? $node->analytics->created : 0,
        'changed'         => isset($node->analytics->changed) && !empty($node->analytics->changed) ? $node->analytics->changed : 0,
      );
    }
  }
  return $fields;
}
function sipi_search_content_by_name($email){
  $id=0;
  $query="select cid from sipi_clients where mail='$email'";
  $result=db_query($query);
  if($result){
    foreach($result as $row){
      $id=$row->cid;
    }
  }
  return $id;
}
function sipi_search_clients_invent_contents_by_iid($nid){
  $id=0;
  $query="select iid from sipi_clients_invent_contents where nid='$nid'";
  $result=db_query($query);
  if($result){
    foreach($result as $row){
      $id=$row->iid;
    }
  }
  return $id;
}
//########################################################################################################################################
//########################################################################################################################################
//########################################################################################################################################
/**
 * SIPI REQUESTS
 * [API_PROTOCOL]://[API_DOMAIN]/[API_VERSION]/[API_SITENAME]/[API_SIPIUSERS|API_SIPICONTENTS].[API_FORMAT]/[API_TOKEN]
 *
 * SIPI USERS
 * http://api.inventmx.com/v1/gamedots/sipi.json/3a5877fc16b6fcbf8eedbe55d091938a
 *
 * SIPI CONTENTS
 * http://api.inventmx.com/v1/gamedots/sipi-analytics.json/3a5877fc16b6fcbf8eedbe55d091938a
 *
 * Filter by Name:
 * http://api.inventmx.com/v1/gamedots/sipi.json/3a5877fc16b6fcbf8eedbe55d091938a?limit=1&name=Gameloft
 * http://api.inventmx.com/v1/gamedots/sipi-analytics.json/3a5877fc16b6fcbf8eedbe55d091938a?limit=1&name=Gameloft
 *
 * @param $siteName
 * @param null $method
 * @param array $query
 * @return null|string
 */
function get_api_url_request($siteName,$method=null,$query=array()){
  global $sipi_variables;

  if(!isset($sipi_variables) || empty($sipi_variables))
    return null;

  #Create URL
  if(isset($sipi_variables['protocol']) && !empty($sipi_variables['protocol']))
    $protocol=$sipi_variables['protocol'].'://';
  if(isset($sipi_variables['domain']) && !empty($sipi_variables['domain']))
    $domain=$sipi_variables['domain'].'/';
  if(isset($sipi_variables['version']) && !empty($sipi_variables['version']))
    $version=$sipi_variables['version'].'/';
  if(isset($siteName) && !empty($siteName))
    $siteName=$siteName.'/';
  if(isset($sipi_variables['format']) && !empty($sipi_variables['format']))
    $format='.'.$sipi_variables['format'].'/';

  $path=$protocol.$domain.$version.$siteName.$sipi_variables[$method].$format.$sipi_variables['token'];

  if(isset($query) && is_array($query) && count($query)>0)
    $path .= (strpos($path, '?') !== FALSE ? '&' : '?') . drupal_http_build_query($query);

  return $path;
}

/**
 * @param null $url
 * @param null $ref_url
 * @param bool $convert
 * @param string $format
 * @param bool $bot
 * @param string $method
 * @param array $options
 * @return mixed|null|string
 */
function _do_api_request($url=null){
  if(!$url)
    return $url;

  $HTTP_RESPONSE = &drupal_static(__FUNCTION__.$url);
  if (!isset($HTTP_RESPONSE)) {
    //Capture everything on buffers
    ob_start();
    //Start cURL resource
    $cURL = @curl_init();
    @curl_setopt($cURL,CURLOPT_HTTPGET,1);
    //Define basic options
    @curl_setopt($cURL, CURLOPT_URL, $url);
    //Custom User-Agent
    @curl_setopt($cURL, CURLOPT_USERAGENT, "Invent User-Agent/".$_SERVER['SERVER_NAME']."/invent.SIPI/".date('Ymd'));
    @curl_setopt($cURL, CURLOPT_AUTOREFERER, TRUE);
    //Headers & other options
    //@curl_setopt($cURL, CURLOPT_HTTPHEADER, shadow_headers());
    @curl_setopt($cURL, CURLOPT_RETURNTRANSFER, TRUE);
    @curl_setopt($cURL, CURLOPT_ENCODING, 'text/html; charset=utf-8');
    @curl_setopt($cURL, CURLOPT_FOLLOWLOCATION, TRUE);
    @curl_setopt($cURL, CURLOPT_CONNECTTIMEOUT, 120);
    @curl_setopt($cURL, CURLOPT_TIMEOUT, 120);
    @curl_setopt($cURL, CURLOPT_MAXREDIRS, 10);
    $HTTP_RESPONSE = @curl_exec($cURL);
    $cURL_ERRNO = @curl_errno($cURL);
    $cURL_ERROR = @curl_error($cURL);
    $header=curl_getinfo($cURL);

    //Error handling
    if($cURL_ERROR)
      return $cURL_ERRNO.' | '.$cURL_ERROR;
  }
  return $HTTP_RESPONSE;

  //Free buffers
  ab_end_clean();
  curl_close($cURL);
  unset($cURL);
}

/**
 * Return shadow headers for cURL transactions
 * @param void
 * @return array Array with options headers for customize cURL transactions
 */
function shadow_headers(){
  $header=array();
  $header[0]  = "Accept: text/xml,application/xml,application/xhtml+xml,";
  $header[0] .= "text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";
  $header[] = "Cache-Control: max-age=3600";
  $header[] = "Connection: keep-alive";
  $header[] = "Keep-Alive: 300";
  $header[] = "Accept-Charset: utf-8;";
  $header[] = "Accept-Language: en-us,es;q=0.5";
  $header[] = "Pragma: "; // browsers keep this blank.
  return $header;
}

function sipi_admin_prepare_email(){
  return array(
    'from' => 'webmaster@inventmx.com',
    'to'   => 'pablo.escobedo@inventmx.com',
    'cc'   => '',
    'bcc'  => '',
  );
}
function sipi_admin_send_email($subject,$message){
  if(!isset($subject) || !isset($message))
    return false;
  $send=sipi_admin_prepare_email();
  $send['subject']=$subject;
  $send['message']=$message;
  return true;

}

/**
 * Implementation of hook_mail().
 */
function sipi_mail($key, &$message, $params) {
  switch($key) {
    case 'sipi_clients_save_send_email':
      //Default params
      $params['format']  = 'text/html';
      $params['charset'] = 'UTF-8';
      //Set message
      $message['subject'] = $params['subject'];
      $message['body']    = $params['text'];
      $message['headers']['X-Mailer']='Invent.mx Mailer';
    break;
    default:
      $message['subject'] = $params['subject'];
      $message['body']    = $params['text'];
      $message['headers']['X-Mailer']='Invent.mx Mailer';
    break;
  }
}

function sipi_fields_translate($text){
  $fields=array(
    'name'        => 'nombre',
    'pass'        => 'contrase&ntilde;a',
    'mail'        => 'correo electr&oacute;nico',
    'company'     => 'empresa',
    'cellphone'   => 'tel&eacute;fono celular',
    'phone'       => 'tel&eacute;fono privado o de oficina',
    'extention'   => 'extensi&oacute;n',
    'web'         => 'p&aacute;gina web',
    'logo'        => 'logotipo',
    'description' => 'descripci&oacute;n',
    /*
    'facebook'    => 'facebook',
    'twitter'     => 'twitter',
    'googleplus'  => 'googleplus',
    'youtube'     => 'youtube',
    'instagram'   => 'instagram',
    'linkedin'    => 'linkedin',
    'pinterest'   => 'pinterest',
    'vine'        => 'vine',
    */
    'created'     => 'registrado',
    'changed'     => 'actualizado',
    'access'      => 'acceso',
    'login'       => 'inicio de sesi&oacute;n',
    'plans'       => 'planes',
  );
  return (isset($fields[$text]) && !empty($fields[$text]) ? $fields[$text] : $text);
}