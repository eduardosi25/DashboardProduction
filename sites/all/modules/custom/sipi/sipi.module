<?php
global $sipi_variables;
$sipi_variables=sipi_get_variables();


/**
 * Implements hook_permission().
 */
function sipi_permission() {
  #Global permission for use SIPI
  $permissions['use sipi'] = array(
    'title' => t('Use SIPI.'),
    'restrict access' => TRUE,
  );
  #Permissions for BackOffice SIPI
  $permissions['sipi admin clients'] = array(
    'title' => t('Administer SIPI Users.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin plans'] = array(
    'title' => t('Administer Plans on SIPI.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats clients'] = array(
    'title' => t('Access to Client Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats executive'] = array(
    'title' => t('Access to Executives Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats salesforce'] = array(
    'title' => t('Access to SalesForce Reporting Stats.'),
    'restrict access' => TRUE,
  );
  $permissions['sipi admin stats manager'] = array(
    'title' => t('Access to Manager Reporting Stats.'),
    'restrict access' => TRUE,
  );
  #Other permission for other widgets or modules
  $permissions['use sipi dashboard'] = array(
    'title' => t('Use SIPI Dashboard.'),
    'restrict access' => TRUE,
  );
  $permissions['use sipi reporting'] = array(
    'title' => t('Use SIPI Reporting.'),
    'restrict access' => TRUE,
  );
  $permissions['use sipi expires'] = array(
    'title' => t('Use SIPI Expires.'),
    'restrict access' => TRUE,
  );
  $permissions['run sipi updates'] = array(
    'title' => t('Run SIPI Updates.'),
    'restrict access' => TRUE,
  );
  $permissions['administer sipi settings'] = array(
    'title' => t('Administer SIPI settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
/**
 * Implements hook_help().
 */
function sipi_help($path, $arg) {
  if ($path == 'admin/help#sipi') {
    return t('invent.SIPI - Módulo para configuración, uso y reporteo de usuarios y contenidos SIPI.');
  }
}
/**
 * Implements hook_menu().
 */
function sipi_menu() {
  $items=array();
  #SIPI MAIN MENU
  $items['sipi'] = array(
    'title'            => 'SIPI',
    'description'      => 'Sistema Integral de Publicación en Internet',
    'page callback'    => 'sipi_login',
    'access callback'  => TRUE,
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #SIPI DASHBOARD
  $items['sipi/dashboard'] = array(
    'title'            => t('Dashboard'),
    'page callback'    => 'sipi_dashboard',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('use sipi dashboard'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #SIPI USER == CLIENT
  $items['sipi/client'] = array(
    'title'            => t('Clients'),
    'page callback'    => 'sipi_client',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/add'] = array(
    'title'            => t('Users'),
    'page callback'    => 'sipi_client_add',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/client/%sipi_client/edit'] = array(
    'title'            => t('User Edit'),
    'page callback'    => 'sipi_client_edit',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/user/%sipi_client/delete'] = array(
    'title'            => t('User Delete'),
    'page callback'    => 'sipi_client_delete',
    'page arguments'   => array(2),
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  $items['sipi/user/%sipi_client/view'] = array(
    'title'            => t('User View'),
    'page callback'    => 'sipi_client_view',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin clients'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.client.inc',
  );
  #SIPI PLANS == PACKAGES
  $items['sipi/plans'] = array(
    'title'            => t('Plans'),
    'page callback'    => 'sipi_plans',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/add'] = array(
    'title'            => t('Add a plan'),
    'page callback'    => 'sipi_plans_add',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/edit'] = array(
    'title'            => t('Edit plan'),
    'page callback'    => 'sipi_plans_edit',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/delete'] = array(
    'title'            => t('Delete plan'),
    'page callback'    => 'sipi_plans_delete',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  $items['sipi/plans/%sipi_plan/view'] = array(
    'title'            => t('Plans View'),
    'page callback'    => 'sipi_plans_view',
    'page arguments'   => array(2),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('sipi admin plans'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.plans.inc',
  );
  #SIPI EXPIRES
  $items['sipi/expire/%expire'] = array(
    'title'            => t('Next expires'),
    'page callback'    => 'sipi_next_expires',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('use sipi expires'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/sipi.inc',
  );
  #ADMINISTER SIPI SETTINGS - WEBMASTER ONLY
  $items['admin/config/system/sipi'] = array(
    'title'            => t('SIPI Settings'),
    'description'      => t('Configure settings for invent.SIPI'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('sipi_admin_settings_form'),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'sipi.admin.inc',
  );
  #SIPI ADMIN
  $items['admin/config/system/sipi/default'] = array(
    'title'            => t('SIPI Settings'),
    'description'      => t('Configure settings for invent.SIPI'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('sipi_admin_settings_form'),
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'file'             => 'sipi.admin.inc',
    'weight'           => 0,
  );
  $items['admin/config/system/sipi/menu-sipi'] = array(
    'title'            => t('Create SIPI menu'),
    'description'      => t('Create SIPI menu'),
    'page callback'    => '_create_sipi_menu',
    'access_callback'  => 'sipi_access',
    'access arguments' => array('administer sipi settings'),
    'type'             => MENU_LOCAL_TASK,
    'file'             => 'sipi.admin.inc',
    'weight'           => 1,
  );
  $items['admin/config/system/sipi/cronlt'] = array(
    'title'            => t('Light weight cron handler'),
    'description'      => t('A light weight cron handler to allow more frequent runs of SIPI cron system'),
    'page callback'    => 'sipi_run_cronlt',
    'access arguments' => array('administer node_analytics settings'),
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Menu access callback.
 *
 * @param $action
 *   The action to be performed. Possible values are:
 *   - import
 *   - clear
 *   - unlock
 * @param $param
 *   Node object or FeedsImporter id.
 */
function sipi_access($permission) {
  // Check for permissions
  if ($permission && user_access($permission)) {
    return TRUE;
  }
  return FALSE;
}


/**+
 * Implements hook_init().
 */
function sipi_init(){

}

/**
 * Returns variables for sipi implementation
 * @return array
 */
function sipi_client_load($sipi_client){
  $query = db_select('sipi_client', 'u');
  $query->fields('u', array('uid','name','contents','posts','duration','price'));
  $query->condition('u.uid', $sipi_client, '=');
  $result = $query->execute()->fetchAssoc();
  if($result){
    foreach($result as $row){
      $sipi_client=$row;
    }
    return $sipi_client;
  }
  return null;
}

/**
 * @param $plan
 * @return null
 */
function sipi_plan_load($plan){
  $query = db_select('sipi_plans', 'p');
  $query->fields('p', array('pid','name','contents','posts','duration','price'));
  $query->condition('p.pid', $plan, '=');
  $result = $query->execute()->fetchAssoc();
  if($result){
    return $result;
  }
  return NULL;
}


function sipi_logging($message='Done',$type='info'){
  global $sipi_variables;
  if($sipi_variables['debug']){
    switch($type){
      case 'info':
        $type=WATCHDOG_INFO;
        break;
      case 'error':
        $type=WATCHDOG_ERROR;
        break;
      case 'notice':
        $type=WATCHDOG_NOTICE;
        break;
      case 'warning':
        $type=WATCHDOG_WARNING;
        break;
    }
    watchdog('sipi', $message, array(), $type);
  }
}

/**
 * Returns variables for sipi implementation
 * @return array
 */
function sipi_get_variables() {
  $variables = &drupal_static(__FUNCTION__);
  if (!isset($variables)) {
    $settings=variable_get('sipi_settings',NULL);
    $variables=array(
      'status' => variable_get('sipi_status',FALSE),
      'debug'  => isset($settings['debug']) && !empty($settings['debug']) ? $settings['debug'] : FALSE,
      'token'  => isset($settings['token']) && !empty($settings['token']) ? $settings['token'] : NULL,
      'sites'  => isset($settings['sites']) && !empty($settings['sites']) ? $settings['sites'] : NULL,
    );
  }
  if (!$variables['token']) {
    sipi_logging('Missing API token access','warning');
  }
  return $variables;
}
