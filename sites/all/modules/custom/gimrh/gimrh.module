<?php
global $gimrh_variables;
$gimrh_variables=gimrh_get_variables();

/**
 * Implements hook_permission().
 */
function gimrh_permission() {
  #Permissions for BackOffice GIM RH
  $permissions['administer gimrh settings'] = array(
    'title' => t('Administer GIM RH settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
/**
 * Implements hook_help().
 */
function gimrh_help($path, $arg) {
  if ($path == 'admin/help#sipi') {
    return t('invent.SIPI - Módulo para configuración, uso y reporteo de candidatos RH - GIM.');
  }
}
/**
 * Implements hook_menu().
 */
function gimrh_menu() {
  $items=array();
  #SIPI MAIN MENU
  $items['trabaja-con-nosotros'] = array(
    'title'            => 'Trabaja con nosotros',
    'page callback'    => 'gimrh_work_with_us',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  #ADMINISTER SIPI SETTINGS - WEBMASTER ONLY
  $items['admin/config/system/gimrh'] = array(
    'title'            => t('GIM RH Settings'),
    'description'      => t('Configure settings for GIM RH'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('gimrh_admin_settings_form'),
    'access_callback'  => 'gimrh_access',
    'access arguments' => array('administer gimrh settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'gimrh.admin.inc',
  );
  return $items;
}
/**
 * Menu access callback.
 *
 * @param $action
 *   The action to be performed. Possible values are:
 *   - import
 *   - clear
 *   - unlock
 * @param $param
 *   Node object or FeedsImporter id.
 */
function gimrh_access($permission) {
  // Check for permissions
  if ($permission && user_access($permission)) {
    return TRUE;
  }
  return FALSE;
}
/**+
 * Implements hook_init().
 */
function gimrh_init(){
  if(arg(0)=='trabaja-con-nosotros')
    drupal_add_css(drupal_get_path('module','gimrh').'/gimrh.css');
}

/**
 * Implements mennu callback function
 */
function gimrh_work_with_us(){
  return 'Form front';
}

function gimrh_work_with_us_form(){

}

function gimrh_work_with_us_form_submit(){

}

function gimrh_work_with_us_form_validate(){

}

/**
 * Returns variables for sipi implementation
 * @return array
 */
function gimrh_get_variables() {
  $variables = &drupal_static(__FUNCTION__);
  if (!isset($variables)) {
    $settings=variable_get('gimrh_settings',NULL);
    $variables=array(
      'status'   => variable_get('gimrh_status',FALSE),
      'debug'    => isset($settings['debug']) && !empty($settings['debug']) ? $settings['debug'] : FALSE,
      'protocol' => isset($settings['protocol']) && !empty($settings['protocol']) ? $settings['protocol'] : 'http',
      'domain'   => isset($settings['domain']) && !empty($settings['domain']) ? $settings['domain'] : 'api.inventmx.com',
      'version'  => isset($settings['version']) && !empty($settings['version']) ? $settings['version'] : 'v1',
      'sites'    => isset($settings['sites']) && !empty($settings['sites']) ? $settings['sites'] : NULL,
      'users'    => isset($settings['users']) && !empty($settings['users']) ? $settings['users'] : NULL,
      'contents' => isset($settings['contents']) && !empty($settings['contents']) ? $settings['contents'] : NULL,
      'format'   => isset($settings['format']) && !empty($settings['format']) ? $settings['format'] : 'json',
      'token'    => isset($settings['token']) && !empty($settings['token']) ? $settings['token'] : NULL,
    );
  }
  return $variables;
}
