<?php
module_load_include('inc', 'gimrh', 'inc/gimrh.validate');
module_load_include('inc', 'gimrh', 'inc/gimrh.submit');

global $gimrh_variables;
$gimrh_variables=gimrh_get_variables();

/**
 * Implements hook_permission().
 */
function gimrh_permission() {
  #Permissions for BackOffice GIM RH
  $permissions['administer gimrh settings'] = array(
    'title' => t('Administer GIM RH settings.'),
    'restrict access' => TRUE,
  );
  return $permissions;
}
/**
 * Implements hook_help().
 */
function gimrh_help($path, $arg) {
  if ($path == 'admin/help#sipi') {
    return t('invent.SIPI - Módulo para configuración, uso y reporteo de candidatos RH - GIM.');
  }
}

/**
 * Implements hook_init().
 */
function gimrh_init(){
  if(arg(0)=='colabora-con-nosotros'){
    module_invoke('admin_menu','suppress');
  }
}

/**
 * Implements hook_menu().
 */
function gimrh_menu() {
  $items=array();
  #SIPI MAIN MENU
  $items['colabora-con-nosotros'] = array(
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('gimrh_colabora_form'),
    'access arguments' => array('access content'),
    'file'             => 'inc/gimrh.form.inc',
    'type'             => MENU_CALLBACK,
  );
  $items['colabora-con-nosotros/carta-de-confidencialidad'] = array(
    'page callback'    => 'gimrh_legal',
    'page arguments'   => array('confidential'),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
    'file'             => 'inc/gimrh.inc',
  );
  $items['colabora-con-nosotros/aviso-de-privacidad'] = array(
    'page callback'    => 'gimrh_legal',
    'page arguments'   => array('privacy'),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
    'file'             => 'inc/gimrh.inc',
  );
  $items['colabora-con-nosotros/complete'] = array(
    'title'            => 'Datos enviados',
    'page callback'    => 'gimrh_data_send',
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
    'file'             => 'inc/gimrh.inc',
  );

  #ADMINISTER SIPI SETTINGS - WEBMASTER ONLY
  $items['admin/gimrh/registros'] = array(
    'title'            => t('Bolsa de Trabajo - GIM RH'),
    'description'      => t('Registro de interesados en Bolsa de Trabajo'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('gimrh_list_form'),
    'access_callback'  => 'gimrh_access',
    'access arguments' => array('administer gimrh settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/gimrh.inc',
  );
  $items['admin/gimrh/registros/internship'] = array(
    'title'            => t('Becarios GIM RH'),
    'description'      => t('Registro de interesados en Programa de Becarios'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('gimrh_list_form'),
    'access_callback'  => 'gimrh_access',
    'access arguments' => array('administer gimrh settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/gimrh.inc',
  );
  $items['admin/config/system/gimrh'] = array(
    'title'            => t('GIM RH Settings'),
    'description'      => t('Configure settings for GIM RH'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('gimrh_admin_settings_form'),
    'access_callback'  => 'gimrh_access',
    'access arguments' => array('administer gimrh settings'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/gimrh.admin.inc',
  );
  $items['admin/config/system/gimrh/cronlt'] = array(
    'title'            => t('GIM RH Cron Lite'),
    'page callback'    => 'gimrh_cronlt',
    'access_callback'  => 'gimrh_access',
    'access arguments' => array('administer gimrh settings'),
    'type'             => MENU_CALLBACK,
    'file'             => 'inc/gimrh.cron.inc',
  );
  return $items;
}
/**
 * Menu access callback.
 *
 * @param $action
 *   The action to be performed. Possible values are:
 *   - import
 *   - clear
 *   - unlock
 * @param $param
 *   Node object or FeedsImporter id.
 */
function gimrh_access($permission) {
  // Check for permissions
  if ($permission && user_access($permission)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements menu callback function
 */
function gimrh_work_with_us(){
  return 'Form front';
}

function gimrh_data_sector($sector){
  if(!isset($sector) || empty($sector))
    return null;

  $items=array();
  if(is_array($sector)){
    foreach($sector as $item){
      if($item!=='seleccionar'){
        $items[]=$item;
      }
    }
    return implode(',',$items);
  }else if(is_string($sector)){
    return check_plain($sector);
  }
  return null;
}

function gimrh_data_interest($interest){
  if(!isset($interest) || empty($interest))
    return null;

  $items=array();
  if(is_array($interest)){
    foreach($interest as $item){
      if($item!=='seleccionar'){
        $items[]=$item;
      }
    }
    return implode(',',$items);
  }else if(is_string($interest)){
    return check_plain($interest);
  }
  return null;
}

function gimrh_getLocation($lid=1,$offset=1){
  //var_dump($lid);
  $items=array(
    'seleccionar' => '- Seleccionar -',
  );
  $query="select lid,name from {locations} where parent={$lid} order by name";
  $result=db_query($query);
  if($result->rowCount()>0){
    foreach($result as $row){
      $items[$row->lid]=$row->name;
    }
  }
  if($offset==1){
    $items=array_slice($items, $offset, NULL, true);
    return $items;
  }
  return $items;
}

function gimrh_getDegree($name=null){
  $items=array(
    'seleccionar' => '- Seleccionar -',
    'basica'      => 'Básica',
    'media'       => 'Media Superior',
    'superior'    => 'Superior',
    'maestria'    => 'Maestría',
    'posgrado'    => 'Posgrado',
  );
  if($name==1){
    array_shift($items);
    return $items;
  }else if(isset($name) && !empty($name)){
    return $items[$name];
  }
  return $items;
}
function gimrh_getSector($name=null){
  $items=array(
    'seleccionar' => '- Seleccionar -',
    'admin'       => 'Administración',
    'internet'    => 'Internet',
    'prtv'        => 'Periódico, Radio y TV',
  );
  if($name==1){
    //array_shift($items);
    return $items;
  }else if(isset($name) && !empty($name)){
    return $items[$name];
  }
  return $items;
}

function gimrh_getInterest($name=null){
  $items=array(
    'seleccionar'    => '- Seleccionar Algo -',
    'admin'    => array(
      'corp_callcenter' => 'Call Center',
      'corp_desarrollo' => 'Desarrollo Organizacional',
      'corp_finanzas'   => 'Finanzas',
      'corp_publicidad' => 'Publicidad',
      'corp_servicios'  => 'Servicios Generales',
      'corp_tecnologia' => 'Tecnología',
    ),
    'internet'           => array(
      'web_informacion'  => 'Información y Contenidos',
      'web_produccion'   => 'Producción',
      'web_video'        => 'Red de Video',
      'web_programacion' => 'Programación Web',
    ),
    'prtv'      => array(
      'imp_informacion' => 'Información y Contenidos',
      'imp_produccion'  => 'Producción',
    ),
  );
  if($name==1){
    //array_shift($items);
    return $items;
  }else if($name==2){
    return array(
      'seleccionar'    => $items['seleccionar'],
    );
  }else if(isset($name) && !empty($name)){
    return $items[$name];
  }
  return $items;
}

/**
 * Returns variables for sipi implementation
 * @return array
 */
function gimrh_get_variables() {
  $variables = &drupal_static(__FUNCTION__);
  if (!isset($variables)) {
    $settings=variable_get('gimrh_settings',NULL);
    $variables=array(
      'status'  => variable_get('gimrh_status',FALSE),
      'debug'   => isset($settings['debug']) && !empty($settings['debug']) ? $settings['debug'] : FALSE,
      'email'   => isset($settings['email']) && !empty($settings['email']) ? $settings['email'] : 'webmaster@invent.mx',
      'privacy' => isset($settings['privacy']) && !empty($settings['privacy']) ? $settings['privacy'] : 'Página en blanco',
      'confidential' => isset($settings['confidential']) && !empty($settings['confidential']) ? $settings['confidential'] : 'Página en blanco',
    );
  }
  return $variables;
}

/**
* Implements hook_theme_registry_alter().
*/
function gimrh_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'my_module');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}
